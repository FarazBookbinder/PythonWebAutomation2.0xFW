{"name": "test_navigate_by_name", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"error\"]\"}\n  (Session info: chrome=124.0.6367.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF69098F922+3045234]\n\t(No symbol) [0x00007FF690633652]\n\t(No symbol) [0x00007FF6904F7564]\n\t(No symbol) [0x00007FF690545F9D]\n\t(No symbol) [0x00007FF69054606C]\n\t(No symbol) [0x00007FF69058BDD7]\n\t(No symbol) [0x00007FF690569DEF]\n\t(No symbol) [0x00007FF6905891C4]\n\t(No symbol) [0x00007FF690569B53]\n\t(No symbol) [0x00007FF69053813C]\n\t(No symbol) [0x00007FF690538D71]\n\tGetHandleVerifier [0x00007FF6909BE89D+3237613]\n\tGetHandleVerifier [0x00007FF690A00BA7+3508727]\n\tGetHandleVerifier [0x00007FF6909F976F+3478975]\n\tGetHandleVerifier [0x00007FF69076F1C6+815126]\n\t(No symbol) [0x00007FF69063ED0F]\n\t(No symbol) [0x00007FF690639854]\n\t(No symbol) [0x00007FF6906399E2]\n\t(No symbol) [0x00007FF69062A574]\n\tBaseThreadInitThunk [0x00007FFA3D477344+20]\n\tRtlUserThreadStart [0x00007FFA3E4A26B1+33]", "trace": "def test_navigate_by_name():\n        driver = webdriver.Chrome()\n        driver.get(\"https://practicetestautomation.com/practice-test-login/\")\n        driver.maximize_window()\n        time.sleep(5)\n        username_element = driver.find_element(By.NAME, \"username\")\n        username_element.send_keys(\"student\")\n        time.sleep(10)\n        password_element = driver.find_element(By.NAME, \"password\")\n        password_element.send_keys(\"student\")\n        time.sleep(15)\n        login_element = driver.find_element(By.ID, \"submit\")\n        login_element.click()\n        time.sleep(10)\n        #assert driver.current_url == \"https://practicetestautomation.com/logged-in-successfully/\"\n>       error_validation_element = driver.find_element(By.ID, \"error\")\n\nsrc\\session_day2_15042024\\test_invalid_passowrd.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002112F389A00>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF69062A574]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA3D477344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFA3E4A26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"error\"]\"}\nE         (Session info: chrome=124.0.6367.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF69098F922+3045234]\nE       \t(No symbol) [0x00007FF690633652]\nE       \t(No symbol) [0x00007FF6904F7564]\nE       \t(No symbol) [0x00007FF690545F9D]\nE       \t(No symbol) [0x00007FF69054606C]\nE       \t(No symbol) [0x00007FF69058BDD7]\nE       \t(No symbol) [0x00007FF690569DEF]\nE       \t(No symbol) [0x00007FF6905891C4]\nE       \t(No symbol) [0x00007FF690569B53]\nE       \t(No symbol) [0x00007FF69053813C]\nE       \t(No symbol) [0x00007FF690538D71]\nE       \tGetHandleVerifier [0x00007FF6909BE89D+3237613]\nE       \tGetHandleVerifier [0x00007FF690A00BA7+3508727]\nE       \tGetHandleVerifier [0x00007FF6909F976F+3478975]\nE       \tGetHandleVerifier [0x00007FF69076F1C6+815126]\nE       \t(No symbol) [0x00007FF69063ED0F]\nE       \t(No symbol) [0x00007FF690639854]\nE       \t(No symbol) [0x00007FF6906399E2]\nE       \t(No symbol) [0x00007FF69062A574]\nE       \tBaseThreadInitThunk [0x00007FFA3D477344+20]\nE       \tRtlUserThreadStart [0x00007FFA3E4A26B1+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1713894686282, "stop": 1713894733874, "uuid": "5db79095-25c6-441f-9d73-bb7f04c7e971", "historyId": "ab236ff6f11d5ffc251b71e3f6d7e7cf", "testCaseId": "ab236ff6f11d5ffc251b71e3f6d7e7cf", "fullName": "src.session_day2_15042024.test_invalid_passowrd#test_navigate_by_name", "labels": [{"name": "parentSuite", "value": "src.session_day2_15042024"}, {"name": "suite", "value": "test_invalid_passowrd"}, {"name": "host", "value": "DESKTOP-F1JOMTV"}, {"name": "thread", "value": "10324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.session_day2_15042024.test_invalid_passowrd"}]}